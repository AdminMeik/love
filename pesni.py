from .. import loader, utils
import asyncio
from telethon.tl.types import Message

@loader.tds
class SongModule(loader.Module):
    """–ü–µ—Å–µ–Ω–Ω—ã–µ —Ç–µ–∫—Å—Ç—ã (–¶–æ–π, –°–µ–∫—Ç–æ—Ä –ì–∞–∑–∞)"""
    strings = {
        "name": "@YMEPOTBAC –ü–µ—Å–µ–Ω–Ω—ã–π –º–æ–¥—É–ª—å",
        "blood_group_song": "üé∏ <b>–í–∏–∫—Ç–æ—Ä –¶–æ–π - –ì—Ä—É–ø–ø–∞ –ö—Ä–æ–≤–∏</b>",
        "lyrics_song": "üé§ <b>–°–µ–∫—Ç–æ—Ä –ì–∞–∑–∞ - –õ–∏—Ä–∏–∫–∞</b>"
    }

    async def client_ready(self, client, db):
        self.client = client

    async def –≥—Ä—É–ø–ø–∞–∫—Ä–æ–≤–∏cmd(self, message):
        """–í–∏–∫—Ç–æ—Ä –¶–æ–π - –ì—Ä—É–ø–ø–∞ –ö—Ä–æ–≤–∏ (–ø–æ—Å—Ç—Ä–æ—á–Ω–æ)"""
        song_lines = [
            "<b>–¢—ë–ø–ª–æ–µ –º–µ—Å—Ç–æ, –Ω–æ —É–ª–∏—Ü—ã –∂–¥—É—Ç</b>",
            "<b>–û—Ç–ø–µ—á–∞—Ç–∫–æ–≤ –Ω–∞—à–∏—Ö –Ω–æ–≥.</b>",
            "<b>–ó–≤—ë–∑–¥–Ω–∞—è –ø—ã–ª—å ‚Äî –Ω–∞ —Å–∞–ø–æ–≥–∞—Ö.</b>",
            "<b>–ú—è–≥–∫–æ–µ –∫—Ä–µ—Å–ª–æ, –∫–ª–µ—Ç—á–∞—Ç—ã–π –ø–ª–µ–¥,</b>",
            "<b>–ù–µ –Ω–∞–∂–∞—Ç—ã–π –≤–æ–≤—Ä–µ–º—è –∫—É—Ä–æ–∫.</b>",
            "<b>–°–æ–ª–Ω–µ—á–Ω—ã–π –¥–µ–Ω—å ‚Äî –≤ –æ—Å–ª–µ–ø–∏—Ç–µ–ª—å–Ω—ã—Ö —Å–Ω–∞—Ö.</b>",
            "",
            "<b>–ì—Ä—É–ø–ø–∞ –∫—Ä–æ–≤–∏ ‚Äî –Ω–∞ —Ä—É–∫–∞–≤–µ,</b>",
            "<b>–ú–æ–π –ø–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä ‚Äî –Ω–∞ —Ä—É–∫–∞–≤–µ,</b>",
            "<b>–ü–æ–∂–µ–ª–∞–π –º–Ω–µ —É–¥–∞—á–∏ –≤ –±–æ—é, –ø–æ–∂–µ–ª–∞–π –º–Ω–µ:</b>",
            "<b>–ù–µ –æ—Å—Ç–∞—Ç—å—Å—è –≤ —ç—Ç–æ–π —Ç—Ä–∞–≤–µ, –Ω–µ –æ—Å—Ç–∞—Ç—å—Å—è –≤ —ç—Ç–æ–π —Ç—Ä–∞–≤–µ.</b>",
            "<b>–ü–æ–∂–µ–ª–∞–π –º–Ω–µ —É–¥–∞—á–∏, –ø–æ–∂–µ–ª–∞–π –º–Ω–µ —É–¥–∞—á–∏!</b>",
            "",
            "<b>–ò –µ—Å—Ç—å —á–µ–º –ø–ª–∞—Ç–∏—Ç—å, –Ω–æ —è –Ω–µ —Ö–æ—á—É</b>",
            "<b>–ü–æ–±–µ–¥—ã –ª—é–±–æ–π —Ü–µ–Ω–æ–π.</b>",
            "<b>–Ø –Ω–∏–∫–æ–º—É –Ω–µ —Ö–æ—á—É —Å—Ç–∞–≤–∏—Ç—å –Ω–æ–≥—É –Ω–∞ –≥—Ä—É–¥—å.</b>",
            "<b>–Ø —Ö–æ—Ç–µ–ª –±—ã –æ—Å—Ç–∞—Ç—å—Å—è —Å —Ç–æ–±–æ–π,</b>",
            "<b>–ü—Ä–æ—Å—Ç–æ –æ—Å—Ç–∞—Ç—å—Å—è —Å —Ç–æ–±–æ–π,</b>",
            "<b>–ù–æ –≤—ã—Å–æ–∫–∞—è –≤ –Ω–µ–±–µ –∑–≤–µ–∑–¥–∞ –∑–æ–≤—ë—Ç –º–µ–Ω—è –≤ –ø—É—Ç—å.</b>"
        ]

        await utils.answer(message, self.strings["blood_group_song"])
        for line in song_lines:
            if line.strip():  # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏
                await message.respond(line)
                await asyncio.sleep(1)  # –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É —Å—Ç—Ä–æ–∫–∞–º–∏

    async def –ª–∏—Ä–∏–∫–∞cmd(self, message):
        """–°–µ–∫—Ç–æ—Ä –ì–∞–∑–∞ - –õ–∏—Ä–∏–∫–∞ (–ø–æ—Å—Ç—Ä–æ—á–Ω–æ)"""
        song_lines = [
            "<b>–Ø –Ω–µ –∑–Ω–∞—é, –∫–æ–º—É –∏ –∑–∞—á–µ–º —ç—Ç–æ –Ω—É–∂–Ω–æ,</b>",
            "<b>–ö—Ç–æ –ø–æ—Å–ª–∞–ª –∏—Ö –Ω–∞ —Å–º–µ—Ä—Ç—å –Ω–µ–¥—Ä–æ–∂–∞—â–µ–π —Ä—É–∫–æ–π,</b>",
            "<b>–¢–æ–ª—å–∫–æ —Ç–∞–∫ –±–µ—Å–ø–æ—â–∞–¥–Ω–æ, —Ç–∞–∫ –∑–ª–æ –∏ –Ω–µ–Ω—É–∂–Ω–æ</b>",
            "<b>–û–ø—É—Å—Ç–∏–ª–∏ –∏—Ö –≤ –í–µ—á–Ω—ã–π –ü–æ–∫–æ–π.</b>",
            "",
            "<b>–ê—Ñ–≥–∞–Ω—Å–∫–∏–π –≤–µ—Ç–µ—Ä, –ø–µ—Å–æ–∫ –¥–∞ —Ç—É–º–∞–Ω,</b>",
            "<b>–°–Ω—ã, —á—Ç–æ –ø—Ä–∏—Å–Ω–∏–ª–∏—Å—å ‚Äî —É–∂–µ –Ω–µ —Å–Ω—è—Ç—Å—è.</b>",
            "<b>–ê —Ç–µ, –∫—Ç–æ –Ω–µ —Å–ø–∏—Ç ‚Äî —Ç–µ —É–∂–µ –Ω–µ –≤—Å—Ç–∞–Ω—É—Ç,</b>",
            "<b>–ê —Ç–µ, –∫—Ç–æ –≤—Å—Ç–∞–ª ‚Äî —Ç–µ –Ω–µ –∑–∞—Ö–æ—Ç—è—Ç —Å–ø–∞—Ç—å.</b>",
            "",
            "<b>–ò–º –Ω–µ —Ö–æ—Ç–µ–ª–æ—Å—å —É–º–∏—Ä–∞—Ç—å,</b>",
            "<b>–ù–æ —Å—É–¥—å–±–∞ —Ä–∞—Å–ø–æ—Ä—è–¥–∏–ª–∞—Å—å –∏–Ω–∞—á–µ.</b>",
            "<b>–ò —Ç–µ–ø–µ—Ä—å –∏—Ö –º–∞—Ç–µ—Ä–∏ –ø–ª–∞—á—É—Ç –Ω–æ—á–∞–º–∏,</b>",
            "<b>–ê –æ—Ç—Ü—ã ‚Äî –º–æ–ª—á–∞ –∫—É—Ä—è—Ç –≤ —Ç–µ–º–Ω–æ—Ç–µ.</b>"
        ]

        await utils.answer(message, self.strings["lyrics_song"])
        for line in song_lines:
            if line.strip():  # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏
                await message.respond(line)
                await asyncio.sleep(1)  # –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É —Å—Ç—Ä–æ–∫–∞–º–∏